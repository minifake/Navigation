<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <style>
        body {
            margin: 0;
            overflow: hidden;
            background-color: #FFC0CB;
        }
    </style>
    <style>
        html {
            line-height: 1.15;
            -ms-text-size-adjust: 100%;
            -webkit-text-size-adjust: 100%
        }

        body {
            margin: 0
        }

        article, aside, footer, header, nav, section {
            display: block
        }

        h1 {
            font-size: 2em;
            margin: .67em 0
        }

        figcaption, figure, main {
            display: block
        }

        figure {
            margin: 1em 40px
        }

        hr {
            box-sizing: content-box;
            height: 0;
            overflow: visible
        }

        pre {
            font-family: monospace, monospace;
            font-size: 1em
        }

        a {
            background-color: transparent;
            -webkit-text-decoration-skip: objects
        }

        abbr[title] {
            border-bottom: none;
            text-decoration: underline;
            text-decoration: underline dotted
        }

        b, strong {
            font-weight: inherit
        }

        b, strong {
            font-weight: bolder
        }

        code, kbd, samp {
            font-family: monospace, monospace;
            font-size: 1em
        }

        dfn {
            font-style: italic
        }

        mark {
            background-color: #ff0;
            color: #000
        }

        small {
            font-size: 80%
        }

        sub, sup {
            font-size: 75%;
            line-height: 0;
            position: relative;
            vertical-align: baseline
        }

        sub {
            bottom: -.25em
        }

        sup {
            top: -.5em
        }

        audio, video {
            display: inline-block
        }

        audio:not([controls]) {
            display: none;
            height: 0
        }

        img {
            border-style: none
        }

        svg:not(:root) {
            overflow: hidden
        }

        button, input, optgroup, select, textarea {
            font-family: sans-serif;
            font-size: 100%;
            line-height: 1.15;
            margin: 0
        }

        button, input {
            overflow: visible
        }

        button, select {
            text-transform: none
        }

        [type=reset], [type=submit], button, html [type=button] {
            -webkit-appearance: button
        }

        [type=button]::-moz-focus-inner, [type=reset]::-moz-focus-inner, [type=submit]::-moz-focus-inner, button::-moz-focus-inner {
            border-style: none;
            padding: 0
        }

        [type=button]:-moz-focusring, [type=reset]:-moz-focusring, [type=submit]:-moz-focusring, button:-moz-focusring {
            outline: 1px dotted ButtonText
        }

        fieldset {
            padding: .35em .75em .625em
        }

        legend {
            box-sizing: border-box;
            color: inherit;
            display: table;
            max-width: 100%;
            padding: 0;
            white-space: normal
        }

        progress {
            display: inline-block;
            vertical-align: baseline
        }

        textarea {
            overflow: auto
        }

        [type=checkbox], [type=radio] {
            box-sizing: border-box;
            padding: 0
        }

        [type=number]::-webkit-inner-spin-button, [type=number]::-webkit-outer-spin-button {
            height: auto
        }

        [type=search] {
            -webkit-appearance: textfield;
            outline-offset: -2px
        }

        [type=search]::-webkit-search-cancel-button, [type=search]::-webkit-search-decoration {
            -webkit-appearance: none
        }

        ::-webkit-file-upload-button {
            -webkit-appearance: button;
            font: inherit
        }

        details, menu {
            display: block
        }

        summary {
            display: list-item
        }

        canvas {
            display: inline-block
        }

        template {
            display: none
        }

        [hidden] {
            display: none
        }

    </style>
</head>

<body>
<canvas id="canvas" width="1680" height="825"></canvas>
<script>
    var minRadius = 50;
    var bubbleNum = (innerWidth * (minRadius)) * 0.00023;
    var depth = 100;

    var canvas = document.getElementById('canvas');
    var ctx = canvas.getContext('2d');

    canvas.width = innerWidth;
    canvas.height = innerHeight;

    window.addEventListener('resize', function () {
        canvas.width = innerWidth;
        canvas.height = innerHeight;
        bubbleNum = (innerWidth * (minRadius)) * 0.00023;
        generateBubbles();
    })

    function Bubble() {
        this.gravity = Math.random() * 0.01;
        this.radius = minRadius + Math.random() * 40;
        this.x = this.radius + (Math.random() * (innerWidth - this.radius * 2));
        this.y = this.radius + (Math.random() * (innerHeight - this.radius * 2));
        this.z = Math.random() * depth;
        this.hspeed = 0.5 + (Math.random() * -1);
        this.vspeed = 0.5 + (Math.random() * -1);
    }

    Bubble.prototype.move = function () {
        if (this.x + this.hspeed < this.radius || this.x + this.hspeed > innerWidth - this.radius) {
            this.hspeed *= -1;
        }
        if (this.y + this.vspeed < this.radius || this.y + this.vspeed > innerHeight - this.radius) {
            this.vspeed *= -1;
        }
        this.x += this.hspeed;
        this.y += this.vspeed;
        this.vspeed += this.gravity;

        if (this.x > innerWidth || this.x < 0 || this.y > innerHeight || this.y < 0) {
            this.x = this.radius + (Math.random() * (innerWidth - this.radius * 2));
            this.y = this.radius + (Math.random() * (innerHeight - this.radius * 2));
        }
    };

    Bubble.prototype.draw = function () {
        var bubble = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.radius);
        bubble.addColorStop(0, 'rgba(189,159,233, 0.05)');
        bubble.addColorStop(1, 'rgba(189,159,233, 0.3)');
        ctx.fillStyle = bubble;
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);
        ctx.fill();

        var glare = ctx.createRadialGradient(this.x, this.y, this.radius * 0.2, this.x, this.y, this.radius * 1.1);
        glare.addColorStop(0, 'rgba(255,255,255,0)');
        glare.addColorStop(1, 'rgba(255,255,255,0.6)');
        ctx.strokeStyle = glare;
        ctx.lineWidth = this.radius * 0.25;
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.radius * 0.66, Math.PI * -0.05, Math.PI * 1.55, true);
        ctx.stroke();
        ctx.lineWidth = this.radius * 0.1;
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.radius * 0.7, Math.PI * 0.65, Math.PI * 0.9, false);
        ctx.stroke();
    };

    var bubbles = [];

    function generateBubbles() {
        for (var i = bubbles.length; i < bubbleNum; i++) {
            bubbles.push(new Bubble());
        }
    }

    generateBubbles();

    function loop() {
        ctx.clearRect(0, 0, innerWidth, innerHeight);
        for (var i = 0; i < bubbles.length; i++) {
            bubbles[i].draw();
            bubbles[i].move();
        }
        requestAnimationFrame(loop);
    }

    requestAnimationFrame(loop);
</script>


</body>
</html>
