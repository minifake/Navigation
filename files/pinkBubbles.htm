<!DOCTYPE html>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<style type="text/css">
			body {
				padding: 0px;
				margin: 0;
				overflow: hidden;
				height: auto;
			}
		</style>
		<style type="text/css">
			html {
				line-height: 1.15;
				-ms-text-size-adjust: 100%;
				-webkit-text-size-adjust: 100%
			}

			body {
				margin: 0
			}

			article,
			aside,
			footer,
			header,
			nav,
			section {
				display: block
			}

			h1 {
				font-size: 2em;
				margin: .67em 0
			}

			figcaption,
			figure,
			main {
				display: block
			}

			figure {
				margin: 1em 40px
			}

			hr {
				box-sizing: content-box;
				height: 0;
				overflow: visible
			}

			pre {
				font-family: monospace, monospace;
				font-size: 1em
			}

			a {
				background-color: transparent;
				-webkit-text-decoration-skip: objects
			}

			abbr[title] {
				border-bottom: none;
				text-decoration: underline;
				text-decoration: underline dotted
			}

			b,
			strong {
				font-weight: inherit
			}

			b,
			strong {
				font-weight: bolder
			}

			code,
			kbd,
			samp {
				font-family: monospace, monospace;
				font-size: 1em
			}

			dfn {
				font-style: italic
			}

			mark {
				background-color: #ff0;
				color: #000
			}

			small {
				font-size: 80%
			}

			sub,
			sup {
				font-size: 75%;
				line-height: 0;
				position: relative;
				vertical-align: baseline
			}

			sub {
				bottom: -.25em
			}

			sup {
				top: -.5em
			}

			audio,
			video {
				display: inline-block
			}

			audio:not([controls]) {
				display: none;
				height: 0
			}

			img {
				border-style: none
			}

			svg:not(:root) {
				overflow: hidden
			}

			button,
			input,
			optgroup,
			select,
			textarea {
				font-family: sans-serif;
				font-size: 100%;
				line-height: 1.15;
				margin: 0
			}

			button,
			input {
				overflow: visible
			}

			button,
			select {
				text-transform: none
			}

			[type=reset],
			[type=submit],
			button,
			html [type=button] {
				-webkit-appearance: button
			}

			[type=button]::-moz-focus-inner,
			[type=reset]::-moz-focus-inner,
			[type=submit]::-moz-focus-inner,
			button::-moz-focus-inner {
				border-style: none;
				padding: 0
			}

			[type=button]:-moz-focusring,
			[type=reset]:-moz-focusring,
			[type=submit]:-moz-focusring,
			button:-moz-focusring {
				outline: 1px dotted ButtonText
			}

			fieldset {
				padding: .35em .75em .625em
			}

			legend {
				box-sizing: border-box;
				color: inherit;
				display: table;
				max-width: 100%;
				padding: 0;
				white-space: normal
			}

			progress {
				display: inline-block;
				vertical-align: baseline
			}

			textarea {
				overflow: auto
			}

			[type=checkbox],
			[type=radio] {
				box-sizing: border-box;
				padding: 0
			}

			[type=number]::-webkit-inner-spin-button,
			[type=number]::-webkit-outer-spin-button {
				height: auto
			}

			[type=search] {
				-webkit-appearance: textfield;
				outline-offset: -2px
			}

			[type=search]::-webkit-search-cancel-button,
			[type=search]::-webkit-search-decoration {
				-webkit-appearance: none
			}

			::-webkit-file-upload-button {
				-webkit-appearance: button;
				font: inherit
			}

			details,
			menu {
				display: block
			}

			summary {
				display: list-item
			}

			canvas {
				display: inline-block
			}

			template {
				display: none
			}

			[hidden] {
				display: none
			}
		</style>
	</head>
	<body onload="init()" onresize="init()">
		<script type="text/javascript">
			var __interval = null,
				__canvas = null;

			function init() {
				if (__interval) {
					clearInterval(__interval)
				}
				var canvas = document.createElement("canvas");
				var ctx = canvas.getContext("2d");
				ctx.clearRect(0, 0, canvas.width, canvas.height);
				var W = window.innerWidth,
					H = window.innerHeight;
				canvas.width = W;
				canvas.height = H;
				var circles = [];
				for (var i = 0; i < 20; i++) {
					circles.push(new create_circle())
				}
				setInterval(draw, 25);

				function create_circle() {
					this.x = Math.random() * W;
					this.y = Math.random() * H;
					this.vx = 0.1 + Math.random() * 1;
					this.vy = -this.vx;
					this.r = 10 + Math.random() * 15
				}

				function draw() {
					var grad = ctx.createLinearGradient(0, 0, W, H);
					grad.addColorStop(0, "#92AEEF");
					grad.addColorStop(1, "#FD6965");
					ctx.globalCompositeOperation = "source-over";
					ctx.fillStyle = grad;
					ctx.fillRect(0, 0, W, H);
					for (var j = 0; j < circles.length; j++) {
						var c = circles[j];
						ctx.beginPath();
						ctx.globalCompositeOperation = "lighter";
						ctx.fillStyle = grad;
						ctx.arc(c.x, c.y, c.r, Math.PI * 2, false);
						ctx.fill();
						c.x += c.vx;
						c.y += c.vy;
						if (c.x < -50) {
							c.x = W + 50
						}
						if (c.y < -50) {
							c.y = H + 50
						}
						if (c.x > W + 50) {
							c.x = -50
						}
						if (c.y > H + 50) {
							c.y = -50
						}
					}
				}
				document.body.appendChild(canvas);
				if (__canvas) {
					document.body.removeChild(__canvas)
				}
				__canvas = canvas
			};
		</script>
	</body>
</html>
